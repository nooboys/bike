# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: DAST scan

on:
  #push:
  #  branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: null  

jobs:
  buildPRreport:

    runs-on: ubuntu-latest
    name: burp scan

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
      issues: read
      checks: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    - name: scan process
      uses: PortSwigger/dastardly-github-action@v1.0.0
      with:
        target-url: 'https://crontab.guru/'

    - name: Publish Report 
      if: always()
      uses: mikepenz/action-junit-report@v4.1.0
      with:
        check_name: 'Dastardly Scan Report'
        report_paths: '**/*.xml'
        require_tests: true   
        
    - name: Run tests
      continue-on-error: true
      working-directory: .
      run: |
        ls
        pwd

          
    - name: expand
      working-directory: .
      continue-on-error: true
      run: |
          cat dastardly-report.xml > dast.result || true
          cat dast.result
          {
            echo "## burp dast"
            echo "<details><summary>Click to expand</summary>"
            echo ""
            echo '```'
            cat dast.result
            echo '```'
            echo "</details>"
          } >> $GITHUB_STEP_SUMMARY

    - name: List Files
      run: ls /home/runner/work/bike/bike

    - name: Print File Path
      continue-on-error: true
      run: cat /home/runner/work/bike/bike/dastardly-report.xml

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
            dastardly-report.xml 
  
    - name: Code Coverage Summary Report
      continue-on-error: true
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./*.xml
        badge: true
        format: markdown
        output: both    

    - name: Run tests md
      continue-on-error: true
      working-directory: .
      run: |
        ls
        pwd
        cat dast.result
        
    - name: Add Coverage PR Comment
      continue-on-error: true
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Add Coverage Summary
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
              const fs = require('fs');
              // read summary file
              var summary = fs.readFileSync('code-coverage-results.md', 'utf8');
              await core.summary
              .addHeading('Code Coverage Summary test')
              .addRaw(summary)
              .write()                  
        

      
        
