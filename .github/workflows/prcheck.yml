# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: PR check scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: null  

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true 

jobs:
  buildPRreport:

    runs-on: ubuntu-latest
    name: burp scan

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
      issues: read
      checks: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Run tests with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    

    - name: Generate coverage report
      continue-on-error: true
      run: |
        reportgenerator "-reports:**/*.cobertura.xml" "-targetdir:coverage-report" "-reporttypes:HTML"
          

    - name: List Files
      run: ls /home/runner/work/bike/bike

    - name: Print File Path
      continue-on-error: true
      run: cat /home/runner/work/bike/bike/*.xml

    - name: Debug Coverage Report Files
      run: |
       echo "Coverage Report Files:"
       ls /home/runner/work/bike/bike/coverage-report  

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
            *.xml 
  
    - name: Code Coverage Summary Report
      continue-on-error: true
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./*.xml
        badge: true
        format: markdown
        output: both


    - name: Add Coverage PR Comment
      continue-on-error: true
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Add Coverage Summary
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
              const fs = require('fs');
              // read summary file
              var summary = fs.readFileSync('code-coverage-results.md', 'utf8');
              await core.summary
              .addHeading('Code Coverage Summary')
              .addRaw(summary)
              .write()                  
        

      
        
